#include<iostream>


using namespace std;

class Time
{
public:
   Time() : m_hrs(0),m_min(0),m_sec(0) { }
   Time(int hrs, int min, int sec);
   
   void add_seconds(long s);
   
   int get_seconds() const;
   int get_minutes() const;
   int get_hours() const;
   long seconds_from() const;
   void print() const;
private:
   int m_hrs;
   int m_min;
   int m_sec;
};

Time::Time(int hrs, int min, int sec)  
{
    if(hrs >= 0 && hrs <= 23)
        m_hrs = hrs;
    else
        m_hrs = 0;
    if(min >= 0 && min <= 59)
        m_min = min;
    else
        m_min = 0;
    if(sec >= 0 && sec <= 59)
        m_sec = sec;
    else
        m_sec = 0;
}

void Time::add_seconds(long s)
{
    // how many hours can I extract?
    int hours = s / 3600;
    s = s % 3600;
    int min = s / 60;
    int sec = s % 60;
    m_hrs += (m_hrs + hours > 23) ? (m_hrs+hours) % 24 : (m_hrs+hours);
    int hour_carry=0;
    m_min += min;
    m_sec += sec;
}
   
int Time::get_seconds() const
{
    return m_sec;
}

int Time::get_minutes() const
{
    return m_min;
} 

int Time::get_hours() const
{
    return m_hrs;
}

long Time::seconds_from() const
{
    return 0;
}

void Time::print() const
{
    cout << m_hrs << ":" << m_min << ":" << m_sec << endl;
}

int main()
{
    Time time1(19,0,0);
    time1.add_seconds(5400);
    time1.print();
    return 0; 
}

















